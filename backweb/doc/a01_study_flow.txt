# 자바프로그래밍 학습의 내용계열화(체계적인 학습 순서)
1. 자바기초
	1) 자바기본문법
		변수, 데이터 타입, 연산자, 제어문
	2) 객체 지향 프로그래밍
		클래스, 객체, 상속, 인터페이스, 추상 클래스
	3) 핵심 클래스 사용
		String, Math, Wrapper클래스
	4) 예외 처리
		try, catch, finally 사용자 정의 예외
2. 고급 자바
	1) 컬렉션 프레임워크
		List, Set, Map
	2) 제네릭스
		타입 파라미터, 제너릭 메소드, 제너릭 클래스
	3) 자바 입출력(I/O)
		파일 읽기/쓰기
3. 자바와 데이터베이스 연동
	1) jdbc :jdbc기초, sql문작성, 데이터베이스 연결 및 관리
	2) 데이터베이스 트랜잭션 관리
		트랜잭션 이해
4. 서블릿과 jsp
	1) 서비릿기초 : 생명주기, url 매핑, http서블릿
	2) jsp기초 : 기본문법, 지시자, 액션 태그
	3) mvc패턴 : 모델, 뷰, 컨트롤러의 역할과 구현..
	
# 자바의 시작
1. 메모리 구조(이론)
	1) 기본 데이터 유형
		stack:한정된 데이터를 저장할 때 사용
			ex) 정수, 실수, boolean, 객체의 주소
		ex) 도서관의 책을 찾은 단말기..	
	2) 객체형 데이터 유형
		stack/heap
			new 키워드를 일반적으로 사용
			heap메모리에 할당, heap메모리의 주소값 stack에 저장
			ex) 배열, String, api(내장객체),
			 class(사용자 정의 클래스를 통한 객체)
		ex) 도서관에 책에 실제 있는 곳
2. 자바프로그램의 입/출력
	1) 출력(console)
		System.out.println("출력할내용"); // 줄바꿈을 포함하여 처리
		System.out.print("출력할내용"); // 줄바꿈을 포함하지 않음..
		사용되는 특수명문자
		\t : 탭간격 , \n : 줄바꿈, \" 쌍따옴표 표시, \' 홋따옴표 표시
	2) 입력(console)
	  	String[] args  
	  	ex) 자바 실행 시 즉,  java 클래스명 args[0]  args[1]	 args[2]
	  		형식으로 입력된것을 main(String[] args)로 main의 매개변수로
	  		받아서 처리하여 데이터를 입력 받을 수 있다.
	  	Scanner sc = new Scanner(System.in);
	  	String inputStr = sc.nextLine();
	  	// 입력된 데이터를 위 객체에 의해 입력 받아 변수에 할당 하여 사용
	  	 			
				
					
		 





		
		