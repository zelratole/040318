# dao 및 jsp 화면처리를 위한 단계별 연습..
## dao
1. sql 작성
	1) dbeaver 툴을 통해서 결과 확인
		ex1) select deptno, dname, loc
		     from dept
		     where deptno = 10;	
		ex2) select empno, ename, job
		     from emp
		     where ename like '%A%';
		    
	2) 조회된 내용
	       - 단일 row : ex1)
	       		
	       - 다중 row : ex2)
	   위에 sql을 통해 결과의 컬럼/컬럼의 데이터유형확인 ==> VO객체 타입과 이름 지정    
	       deptno(int), dname(String), loc(String)
	       
	       empno(int), ename(String), job(String)
	       
	   입력(where 조건문 데이터)
	   	   ex1) deptno(int)
	   	   ex2) enameSCh(String)
	   	   ex3) emp전체 입력  insert into emp values(?,?, ... )
	-------------------------------------------   	   
	3) class VO객체 만들기 (단일/다중)
		class Dept03{
			private int deptno;
			private String dname;
			private String loc;
			// 생성자만들기..(default/전체매개변수가 있는 생성자)
			// set/getXXXX
		}   	
		class Emp03{
			private int empno;
			private String ename;
			private String job;
			// 생성자만들기..(default/전체매개변수가 있는 생성자)
			// set/getXXXX		
		}   
	
	3) Dao 기능메서드 틀만들기(연습)
		sql의 결과를 컬럼명 ==> VO ==> 리턴타입(다중 List<객체>, 객체)
			객체로 선언과 리턴타입결정..
		where에 들어갈 데이터 ==> String, int ==> 매개변수로 설정.
		public Dept03 getDept(int deptno){
			Dept03 d = null;
			
			
			return d;
		}
	=======================================================	
		
	4) Dao 기능메서드 내용만들기(연습)
		String sql = "select deptno, dname, loc
		     from dept
		     where deptno = ? ";
		?에 매핑될 내용 pstmt.setXXXX(1, 매개변수)
		?에 매핑될 내용 pstmt.setInt(1, deptno);
		while(rs.next()){ // 행단위로 이동 데이터 있을 때까지..
			// rs.get타입("컬럼명") : 해당 열단위 데이터를 가져와서 할당.0000000000000-9
			list.add(new Dept(rs.getInt("deptno"),....));
		}
		if(rs.next()){  // 행단위로 이동 처리..
			d = new Dept(rs.getInt("deptno"), rs.getString("dname"),
				rs.getString("loc"));
		}
	============================================ dao 끝
	5) main() : 위에 dao가 잘 작동하는 jsp에 문제없는지 test 용..
	


## dao와 jsp 연동 처리(조회, 등록, 수정, 삭제)
1. 요청값 연습..
	form ==> 전송 받는 것.
	name="key" value="입력한데이터"
	==> 페이지?key=입력할데이터
	
	
2. 요청값을 객체로 처리
	String 변수 = request.getParameter("요청키");
	${param.요청키}
	${not empty param.요청키} : 요청값이 있는지 여부 boolean값 
	주로 등록/수정시 요청값이 많을 떄, 객체로 할당하여 처리한다.
	부서정보를 등록시, 부서번호, 부서명, 부서위치를 요청값으로 받아서 객체로 할당하여
	처리할시, 
	${param.deptno}
	${param.dname}
	${param.loc}
	request.setAttribute("dept", new Dept());
	${dept.setDeptno(param.deptno)}
	${dept.setDname(param.dname)}
	${dept.setLoc(param.loc)}
	요청값을 할당하여 처리(객체로)
	${dept.deptno} : 할당되었기에 get property로 호출가능하다.
	${dept.dname}
	${dept.loc}

3. useBean 이용해서 요청값/객체

4. dao 연동 해서 요청값 받아서 dao에 처리 
	1) dao useBean할당.
	2) 요청값이 필요한 부분도 처리..:VO

5. dao를 통해서 화면 출력 처리
	1) 위에 내용 결과를 화면에 출력 처리..
	
# 사원정보 관리(조회/등록/수정/삭제) 처리
1. 기능 내용 정리(요구사항)
	1) 초기화면에 사원정보를 사원명과 직책명으로 조회하는 리스트를 확인한다.
	2) 등록버튼을 클릭시, 등록하면으로 페이지가 이동되면, 사원정보를 상세 내용을 등록할 
		수 있게 한다.
	3) 다시, 리스트화면에서 해당 항목 중에 특정한 사원번호 행을 클릭시, 상세화면으로
		이동한다.
	4) 상세화면에서 데이터가 입력된 상세 내용을 볼 수 있고, 입력된 데이터를 수정/삭제
		처리할 수 있다.
2. 처리할 페이지
	1) dao : backweb.a04_database.A04_EmpDao.java
			public List<Emp> getEmpList(Emp sch)
			public int insertEmp(Emp ins)
			public int updateEmp(Emp upt)
			public int deleteEmp(int empno)
	2) vo :	backweb.vo.Emp.java	
	3) jsp : webapp/a08_empList
		전체조회:	a01_empList.jsp
		등록화면: a02_empInsert.jsp
		상세화면 : a03_empDetail.jsp
3. 처리순서 scott/tiger
	1) 대상 테이블 만들기(복사테이블)
		emp05
		DROP TABLE emp05;
		CREATE TABLE emp05
		AS SELECT * FROM emp;
		ALTER TABLE emp05
		MODIFY (ename varchar2(50),
		        job varchar2(50));
		SELECT * FROM emp05;
		
	2) sql 확인
		조회 :
		SELECT * 
		FROM emp05
		WHERE ename LIKE '%%'
		AND job LIKE '%%';
		
		SELECT * 
		FROM emp05
		WHERE ename LIKE ?
		AND job LIKE ?		
		등록 :
		상세 :
		수정 :
		삭제 :
	3) VO 작성
		private	int empno;
		private String ename;
		private String job;
		private int mgr;
		private Date hiredate;
		private double sal;
		private double comm;
		private int deptno;	
	4) Dao 생성.
		main()를 통해서 조회/등록/수정/삭제 확인
	5) 화면단처리
		전체조회화면 :
		등록화면 :
		상세화면 :
				
# 전체조회화면 처리 순서(a01_empList.jsp)
1. 화면 구성
	1) form 처리 : 요청값 name 속성 
	2) list 화면 기본 출력 내용 결정
		사원번호 사원명 직책명 급여 부서번호
2. useBean 선언
	1) dao
	2) 요청값 처리하는 Emp

3. 테이블 리스트 처리 
	<c:forEach var="emp" items="${dao.empList(sch)}">
		<tr>
			<td>${emp.empno}</td>	
			<td>${emp.ename}</td>	
			<td>${emp.job}</td>	
			<td>${emp.sal}</td>	
			<td>${emp.deptno}</td>
# 등록 처리
1. 전체조회화면에서 이벤트로 등록 버튼 클릭시, 등록화면 이동 처리
2. 등록화면
	1) 등록 sql 작성 및 등록할 컬럼 확인	
		-- sysdate :현재 날짜/시간
		INSERT INTO emp05
		values(1000,'홍길동','사원',7902,sysdate,3500,1000,10);
		-- to_date('2024-05-01','YYYY-MM-DD') : 특정문자열을 통해 날짜데이터 입력
		INSERT INTO emp05
		values(1001,'마길동','사원',7902,to_date('2024-05-01','YYYY-MM-DD'),3400,2000,20);
		/*
		INSERT INTO emp05
		values(?,?,?,?,to_date(?,'YYYY-MM-DD'),?,?,?)
		 * */

	2) 등록할 화면 UI 작성
		form name 설정/등록버튼 설정/main화면 이동 버튼 처리..
		사원번호 사원명 직책명 관리자번호 입사일(YYYY-MM-DD), 급여, 보너스, 부서번호
		
		리스트페이지에 등록버트 클릭시 이동 처리..
			
		
	3) 등록 dao 메서드 선언..
		public int insertEmp(Emp ins){}	
	4) useBean 선언
		<jsp:useBean id="dao" class="@@@@.dao클래스"/>		
		<jsp:useBean id="ins" class="@@@@.vo클래스"/>		
	5) 등록버튼 클릭시, 처리할 프로세서 처리
		<c:if test = "${param.empno}">
		  	<c:set var="isCnt" value="${doa.insertEmp(ins)}"
	6) java script로 등록처리 확인창 로딩.. 이후 프로세스 처리
		    var isCnt = ${isCnt}
		    if( isCnt>0){
		    	if( confirm("등록성공\n메인화면 이동시 확인") ){
		    		location.href="a01_empList.jsp";
		    	}
		    }else{
		    	alert("등록되지 않음!");
		    }								 	
	7) 메인화면 이동 버튼 이벤트 처리
		<button onclick="location.href='a01_empList.jsp'"

     	         
	
	




