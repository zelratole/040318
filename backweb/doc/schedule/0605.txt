### Oracle 조인과 권한 설정

#### 1. 흥미로운 도입
Oracle 데이터베이스는 다양한 기능과 강력한 성능으로 전 세계적으로 널리 사용되고 있습니다. 
특히, 조인과 권한 설정은 데이터베이스 관리와 운영의 핵심 요소 중 하나입니다. 
여러분은 대규모 데이터베이스에서 여러 테이블 간의 관계를 효율적으로 관리하고, 
사용자별로 적절한 권한을 부여하여 안전하게 데이터를 보호하는 방법을 배우게 될 것입니다. 

#### 2. 학습목표
이 강의를 통해 다음과 같은 목표를 달성할 수 있습니다:
- 다양한 종류의 조인(내부 조인, 외부 조인, 교차 조인 등)을 이해하고 활용할 수 있다.
- 사용자와 역할에 대한 권한 설정 방법을 이해하고 적용할 수 있다.
- 실제 업무 상황에서 조인과 권한 설정을 효과적으로 사용할 수 있다.

#### 3. 주요 핵심 키워드와 핵심개념
- **조인(Join):** 두 개 이상의 테이블을 연결하여 데이터를 조회하는 방법.
  - **내부 조인(Inner Join):** 두 테이블에서 일치하는 데이터만 조회.
  - **외부 조인(Outer Join):** 한쪽 테이블의 모든 데이터와 다른 테이블에서 일치하는 데이터만 조회.
  - **교차 조인(Cross Join):** 두 테이블의 모든 가능한 조합을 조회.
- **권한 설정(Privileges):** 데이터베이스 사용자에게 특정 작업을 수행할 수 있는 권한을 부여하는 과정.
  - **시스템 권한(System Privileges):** 데이터베이스 관리와 관련된 권한.
  - **객체 권한(Object Privileges):** 특정 테이블, 뷰, 시퀀스 등에 대한 권한.
  - **역할(Role):** 여러 권한을 묶어 하나의 그룹으로 관리하는 방법.

#### 4. 퀴즈문제/토론과제
**퀴즈 문제:**
1. 다음 중 내부 조인(Inner Join)에 대한 설명으로 올바른 것은?
   - A) 두 테이블에서 일치하지 않는 데이터도 조회한다.
   - B) 두 테이블에서 일치하는 데이터만 조회한다.
   - C) 한쪽 테이블의 모든 데이터를 조회한다.
   - D) 두 테이블의 모든 가능한 조합을 조회한다.

2. 사용자가 특정 테이블에 대해 데이터를 삽입할 수 있도록 하기 위해 필요한 권한은?
   - A) SELECT
   - B) UPDATE
   - C) DELETE
   - D) INSERT

**토론 과제:**
- 데이터베이스에서 외부 조인(Outer Join)과 내부 조인(Inner Join)의 사용 시나리오를 실제 업무 사례를 바탕으로 토론해보세요.
- 데이터베이스 보안 측면에서 권한 설정이 왜 중요한지, 실제 사례를 통해 토론해보세요.

#### 5. 실무적용사례
**실무 사례 1: 복잡한 쿼리 작성**
- 한 대형 유통 회사는 고객 주문 데이터를 분석하기 위해 여러 테이블을 조인해야 했습니다. 고객 정보 테이블, 주문 정보 테이블, 제품 정보 테이블을 내부 조인하여 고객별 주문 내역과 제품 세부 정보를 조회했습니다. 이를 통해 매출 분석 보고서를 작성하고, 고객 맞춤형 마케팅 전략을 수립할 수 있었습니다.

**실무 사례 2: 권한 설정을 통한 데이터 보호**
- 한 금융 기관에서는 고객 정보의 보안이 매우 중요했습니다. 따라서 각 부서별로 접근 가능한 데이터를 제한하기 위해 세분화된 권한 설정을 적용했습니다. 예를 들어, 고객 서비스 부서 직원은 고객의 기본 정보만 조회할 수 있도록 하고, 재무 부서 직원은 고객의 금융 거래 내역까지 조회할 수 있도록 설정했습니다. 이를 통해 데이터 유출을 방지하고, 필요에 따라 권한을 유연하게 관리할 수 있었습니다.


## AJAX 단계별 학습 객관식 문제

1. **다음 중 기본 javascript XMLHttpRequest 객체를 사용하는 방법은?**
   - A. $.ajax()
   - B. axios.get()
   - C. new XMLHttpRequest()
   - D. fetch()

   **정답**: C. new XMLHttpRequest()

2. **jquery의 ajax 기본 속성값으로 올바른 것을 고르시오.**
   - A. method: "POST"  ==> type:"post"
   - B. link: 지정한 페이지
   - C. url: 지정한 페이지
   - D. connect: "true"

   **정답**: C. url: 지정한 페이지

3. **jquery ajax의 success 콜백 함수에서 데이터를 받아 처리하는 방법으로 올바른 것은?**
   - A. success:function(response){ ... }
   - B. success:function(data){ ... }
   - C. success:function(result){ ... }
   - D. success:function(info){ ... }

   **정답**: B. success:function(data){ ... }

4. **jquery ajax를 사용하여 데이터를 전송할 때 올바른 형식은?**
   - A. data:"key1=val1"
   - B. data:"key1=val1&key2=val2"
   - C. data:{key1: val1}
   - D. data:"{key1: 'val1'}"

   **정답**: B. data:"key1=val1&key2=val2", A, C

5. **jquery ajax에서 데이터 타입을 JSON으로 선언하는 속성값은?**
   - A. dataType: "javascript"
   - B. dataType: "html"
   - C. dataType: "json"
   - D. dataType: "text"

   **정답**: C. dataType: "json"
     문자열로 받은 json형식을 json객체로 변환하는 속성..  JSON.parse()

6. **JSON 데이터를 문자열로 변환하는 JavaScript 메서드는?**
   - A. JSON.stringify()
   - B. JSON.parse()
   - C. JSON.convert()
   - D. JSON.encode()

   **정답**: A. JSON.stringify()
   
   	json문자열 ==> json객체  : JSON.parse();
   	json객체 ==> json문자열   : JSON.stringify();
 
7. **서버에서 클라이언트로 전달되는 JSON 형식의 예시는?**
   - A. {"name":홍길동,"age":25,"loc":서울}
   - B. {name:"홍길동",age:25,loc:"서울"}
   - C. {"name":"홍길동","age":25,"loc":"서울"}
   - D. {"name":'홍길동',"age":25,"loc":'서울'}

   **정답**: C. {"name":"홍길동","age":25,"loc":"서울"}

8. **HTML form 데이터를 key/value 형식으로 자동 변환하는 jQuery 메서드는?**
   - A. formToKeyValue()
   - B. serialize()
   - C. toKeyValue()
   - D. formSerialize()

   **정답**: B. serialize()

9. **아래의 HTML 폼 데이터를 jQuery의 serialize() 메서드로 변환했을 때 올바른 결과는?**
   ```html
   <input name="username" value="john_doe"/>
   <input name="password" value="1234"/>
   ```
   - A. "username=john_doe&password=1234"
   - B. "name=username&value=john_doe&name=password&value=1234"
   - C. "username&password"
   - D. "john_doe=1234"

   **정답**: A. "username=john_doe&password=1234"

10. **다음 중 JSON 데이터를 객체로 변환하는 JavaScript 메서드는?**
    - A. JSON.stringify()
    - B. JSON.parse()
    - C. JSON.decode()
    - D. JSON.convert()

    **정답**: B. JSON.parse()


## SQL 함수 관련 객관식 문제

1. **다음 중 단일행 함수에 해당하지 않는 것은?**
   - A. 숫자함수
   - B. 날짜함수
   - C. 변환함수
   - D. 집계함수

   **정답**: D. 집계함수 :다중행 함수

2. **initcap() 함수는 어떤 기능을 수행하는가?**
   - A. 모든 문자를 대문자로 변환
   - B. 모든 문자를 소문자로 변환
   - C. 첫 번째 문자만 대문자로 변환
   - D. 문자열의 길이를 반환

   **정답**: C. 첫 번째 문자만 대문자로 변환

3. **lower() 함수의 주요 용도는?**
   - A. 문자열을 소문자로 변환
   - B. 문자열을 대문자로 변환
   - C. 문자열의 길이를 반환
   - D. 문자열을 연결

   **정답**: A. 문자열을 소문자로 변환

4. **다음 중 문자열의 길이를 반환하는 함수는?**
   - A. length()
   - B. substr()
   - C. initcap()
   - D. upper()

   **정답**: A. length()

5. **'HELLO WORLD' 문자열을 대문자로 변환하는 SQL 함수는?**
   - A. lower('HELLO WORLD')
   - B. initcap('HELLO WORLD')
   - C. length('HELLO WORLD')
   - D. upper('HELLO WORLD')

   **정답**: D. upper('HELLO WORLD')

6. **다음 중 대소문자 상관없이 검색하는 SQL문은?**
   - A. SELECT * FROM employees WHERE first_name = 'JOHN';
   - B. SELECT * FROM employees WHERE lower(first_name) = 'john';
   - C. SELECT * FROM employees WHERE upper(first_name) = 'JOHN';
   - D. B와 C 모두

   **정답**: D. B와 C 모두

7. **'sql*plus' 문자열에서 'plus'를 추출하는 함수는?**
   - A. substr('sql*plus', 5, 4)
   - B. substr('sql*plus', 1, 4)
   - C. substr('sql*plus', 5, 5)
   - D. substr('sql*plus', 4, 4)

   **정답**: A. substr('sql*plus', 5, 4)   1부터시작하는 위치, 해당위치부터 갯수

8. **다음 중 employee 테이블에서 job_id가 소문자로 변환된 결과를 출력하는 SQL문은?**
   - A. SELECT upper(job_id) FROM employees;
   - B. SELECT lower(job_id) FROM employees;
   - C. SELECT initcap(job_id) FROM employees;
   - D. SELECT substr(job_id) FROM employees;

   **정답**: B. SELECT lower(job_id) FROM employees;

9. **다음 SQL문에서 올바른 결과를 출력하는 것을 고르시오.**
   ```sql
   SELECT '직책 '||lower(job_id) ||'인 '|| upper(first_name) ||'의 이메일은 '||lower(email) ||' 입니다.' show
   FROM EMPLOYEES;
   ```
   - A. 직책 소문자 인 대문자 의 이메일은 소문자 입니다.
   - B. 직책 대문자 인 소문자 의 이메일은 대문자 입니다.
   - C. 직책 소문자 인 대문자 의 이메일은 대문자 입니다.
   - D. 직책 대문자 인 소문자 의 이메일은 소문자 입니다.

   **정답**: A. 직책 소문자 인 대문자 의 이메일은 소문자 입니다.

10. **다음 SQL문에서 직책명이 'MAN' 또는 'GER'로 끝나는 사원을 출력하는 것은?**
    ```sql
    SELECT ename, job
    FROM emp e
    WHERE substr(job, -3, 3) in ('MAN', 'GER');
    ```
    - A. WHERE substr(job, 3, 3) in ('MAN', 'GER');
    - B. WHERE substr(job, 1, 3) in ('MAN', 'GER');
    - C. WHERE substr(job, -3, 3) in ('MAN', 'GER');
    - D. WHERE substr(job, 5, 3) in ('MAN', 'GER');

    **정답**: C. WHERE substr(job, -3, 3) in ('MAN', 'GER');
	-1 : 제일 마지막 문자로 부터 반대로 카운트 처리하면 된다.





