### 1. 흥미로운 도입

데이터베이스 관리 시스템(DBMS)은 현대 비즈니스의 중심에 있습니다. 다양한 정보와 데이터를 효율적으로 관리하고 활용하는 능력은 기업의 성공을 좌우합니다. 오라클(Oracle) 데이터베이스는 그 중에서도 가장 많이 사용되는 시스템 중 하나로, 고성능과 안정성을 자랑합니다. 본 강의에서는 오라클 데이터베이스의 뷰(View), 계정 생성, 프로시저 활용에 대해 알아봅니다. 이 세 가지는 데이터 관리와 보안, 효율성을 높이는 데 필수적인 요소입니다. 그럼 이제 이 흥미로운 주제로 들어가 보겠습니다.

### 2. 학습목표

- 오라클 뷰(View)의 개념과 활용 방법을 이해한다.
- 오라클에서 계정을 생성하고 관리하는 방법을 익힌다.
- 프로시저를 작성하고 활용하여 데이터베이스 작업을 자동화하는 방법을 습득한다.
- 각 기능들을 통합하여 실무에 적용하는 방법을 배운다.

### 3. 주요 핵심 키워드와 핵심개념

- **오라클 뷰(View)**: 데이터베이스 내의 하나 이상의 테이블에서 데이터를 선택하여 논리적인 테이블로 정의한 객체.
  - **뷰의 종류**: 단순 뷰(Simple View), 복합 뷰(Complex View)
  - **뷰의 생성**: `CREATE VIEW` 문을 사용
  - **뷰의 장점**: 데이터 보안, 간편한 데이터 접근, 복잡한 쿼리 간소화

- **계정 생성 및 관리**: 데이터베이스 사용자 계정을 생성하고 권한을 부여하는 과정.
  - **계정 생성**: `CREATE USER` 문을 사용
  - **권한 부여**: `GRANT` 문을 사용하여 사용자에게 필요한 권한을 부여
  - **역할(Role)**: 여러 권한을 묶어 한 번에 부여할 수 있는 방법

- **프로시저(Procedure)**: 일련의 SQL 문을 저장해두고 필요할 때마다 실행할 수 있는 프로그램 단위.
  - **프로시저 생성**: `CREATE PROCEDURE` 문을 사용
  - **입력 및 출력 매개변수**: 프로시저에 전달되는 값과 반환되는 값
  - **예외 처리**: 프로시저 내에서 발생할 수 있는 오류를 처리하는 방법

### 4. 퀴즈문제/토론과제

#### 퀴즈문제

1. 뷰(View)의 주된 장점은 무엇인가요?
   - a) 데이터 중복
   - b) 데이터 보안
   - c) 데이터 삭제
   - d) 데이터 정렬

2. 다음 중 오라클에서 계정을 생성하는 SQL 문은 무엇인가요?
   - a) `ADD USER`
   - b) `CREATE USER`
   - c) `INSERT USER`
   - d) `UPDATE USER`

3. 프로시저를 사용하는 주된 이유는 무엇인가요?
   - a) 데이터베이스를 백업하기 위해
   - b) 반복적인 작업을 자동화하기 위해
   - c) 테이블을 삭제하기 위해
   - d) 새로운 테이블을 생성하기 위해

#### 토론과제

- 뷰(View)를 사용할 때의 단점과 그에 대한 해결책에 대해 토론해 보세요.
- 기업에서 데이터베이스 계정 관리를 어떻게 효율적으로 할 수 있을지에 대해 논의해 보세요.
- 프로시저 작성 시 고려해야 할 보안 문제에 대해 토론해 보세요.

### 5. 실무적용사례

- **뷰(View) 활용 사례**: 한 대형 소매업체는 다양한 지점의 판매 데이터를 통합하여 분석할 때 뷰를 사용합니다. 이를 통해 지역별, 제품별 판매 실적을 손쉽게 분석할 수 있으며, 필요한 데이터만을 선택적으로 노출하여 보안을 강화합니다.

- **계정 생성 및 관리 사례**: 금융 기관에서 여러 팀이 각자의 데이터베이스에 접근해야 하는 경우, 각 팀에게 필요한 최소한의 권한만 부여하여 계정을 생성합니다. 이를 통해 불필요한 데이터 접근을 막고 보안을 강화합니다.

- **프로시저 활용 사례**: 한 제조업체는 매일 반복적으로 수행해야 하는 재고 업데이트 작업을 자동화하기 위해 프로시저를 작성했습니다. 이를 통해 업무 효율성을 높이고, 사람이 직접 처리하면서 발생할 수 있는 실수를 줄였습니다.


### 중첩 함수 문제
1. `ename` 컬럼의 값을 소문자로 변환한 후 길이를 반환하는 SQL 문은 무엇입니까?
    a) `SELECT length(ename) FROM emp;`  
    b) `SELECT length(lower(ename)) FROM emp;`  
    c) `SELECT lower(length(ename)) FROM emp;`  
    d) `SELECT ename, length(lower(ename)) FROM emp;`

2. `ename` 컬럼에서 첫 세 글자를 추출한 후 이를 소문자로 변환하는 SQL 문은 무엇입니까?
    a) `SELECT ename, substr(lower(ename), 1, 3) FROM emp;`  
    b) `SELECT ename, lower(substr(ename, 1, 3)) FROM emp;`  
    c) `SELECT lower(substr(ename, 1, 3)) FROM dual;`  
    d) `SELECT substr(lower(ename), 1, 3) FROM emp;`

### `instr` 함수 문제
3. `KING` 문자열에서 `I` 문자의 위치를 찾는 SQL 문은 무엇입니까?
    a) `SELECT instr('KING', 'I') FROM dual;`  
    b) `SELECT instr('KING', 'K') FROM dual;`  
    c) `SELECT instr('KING', 'G') FROM dual;`  
    d) `SELECT instr('KING', 'N') FROM dual;`

4. `ename` 컬럼에서 `A` 문자의 위치를 찾는 SQL 문은 무엇입니까?
    a) `SELECT ename, instr(ename, 'A') FROM emp;`  
    b) `SELECT ename, instr(ename, 'a') FROM emp;`  
    c) `SELECT ename, instr(ename, 'A') FROM dual;`  
    d) `SELECT instr(ename, 'A') FROM emp;`

### `lpad`, `rpad` 함수 문제
5. `sql` 문자열을 길이 5로 만들고 왼쪽에 `*`로 채우는 SQL 문은 무엇입니까?
    a) `SELECT lpad('sql', 5, '*') FROM emp;`  
    b) `SELECT lpad('sql', 5, '*') FROM dual;`  
    c) `SELECT rpad('sql', 5, '*') FROM dual;`  
    d) `SELECT lpad('sql', 3, '*') FROM dual;`

6. `ename` 컬럼의 값을 최대 길이 6으로 만들고, 나머지는 `*`로 채우는 SQL 문은 무엇입니까?
    a) `SELECT ename, lpad(ename, 6, '*') FROM emp;`  
    b) `SELECT ename, rpad(ename, 6, '*') FROM emp;`  
    c) `SELECT ename, rpad(ename, 6, '*') FROM dual;`  
    d) `SELECT ename, lpad(ename, 6, '*') FROM dual;`

### `ltrim`, `rtrim`, `trim` 함수 문제
7. 문자열 `*****sql****`의 왼쪽에 있는 `*`를 제거하는 SQL 문은 무엇입니까?
    a) `SELECT ltrim('*****sql****', '*') FROM dual;`  
    b) `SELECT rtrim('*****sql****', '*') FROM dual;`  
    c) `SELECT trim('*****sql****', '*') FROM dual;`  
    d) `SELECT ltrim('sql****', '*') FROM dual;`

8. `job` 컬럼의 값을 기준으로 왼쪽에 있는 `S`를 제거하는 SQL 문은 무엇입니까?
    a) `SELECT job, rtrim(job, 'S') FROM emp;`  
    b) `SELECT job, ltrim(job, 'S') FROM emp;`  
    c) `SELECT job, trim(job, 'S') FROM emp;`  
    d) `SELECT job, ltrim(job, 'N') FROM emp;`

### 숫자형 함수 문제
9. 숫자 `23427.277`을 소수점 세 번째 자리에서 반올림하는 SQL 문은 무엇입니까?
    a) `SELECT round(23427.277, 1) FROM dual;`  
    b) `SELECT round(23427.277, 3) FROM dual;`  
    c) `SELECT trunc(23427.277, 3) FROM dual;`  
    d) `SELECT ceil(23427.277) FROM dual;`

10. 숫자 `23427.277`을 소수점 첫 번째 자리에서 내림 처리하는 SQL 문은 무엇입니까?
    a) `SELECT trunc(23427.277, 1) FROM dual;`  
    b) `SELECT floor(23427.277) FROM dual;`  
    c) `SELECT trunc(23427.277, -1) FROM dual;`  
    d) `SELECT ceil(23427.277) FROM dual;`

### 추가 문제
11. `ename` 컬럼의 값을 소문자로 변환한 후, 그 길이를 출력하는 SQL 문은 무엇입니까?
    a) `SELECT ename, length(lower(ename)) FROM emp;`  
    b) `SELECT ename, lower(length(ename)) FROM emp;`  
    c) `SELECT ename, lower(ename) FROM emp;`  
    d) `SELECT lower(length(ename)) FROM emp;`

12. `job` 컬럼에서 `MAN`이 포함된 데이터를 검색하고 그 위치를 출력하는 SQL 문은 무엇입니까?
    a) `SELECT ename, job, instr(job, 'MAN') FROM emp WHERE instr(job, 'MAN') > 0;`  
    b) `SELECT ename, job, instr(job, 'MAN') FROM emp WHERE instr(job, 'MAN') = 0;`  
    c) `SELECT ename, job, instr(job, 'MAN') FROM emp WHERE instr(job, 'MAN') < 0;`  
    d) `SELECT ename, job, instr(job, 'MAN') FROM emp;`

13. `ENAME` 컬럼의 값을 오른쪽에 `*`로 채워 길이 8로 만드는 SQL 문은 무엇입니까?
    a) `SELECT ename, rpad(ename, 8, '*') FROM emp;`  
    b) `SELECT ename, lpad(ename, 8, '*') FROM emp;`  
    c) `SELECT ename, rpad(ename, 8, '#') FROM emp;`  
    d) `SELECT ename, rpad(ename, 6, '*') FROM emp;`

14. `job` 컬럼의 값을 기준으로 오른쪽에 있는 `N`을 제거하는 SQL 문은 무엇입니까?
    a) `SELECT job, ltrim(job, 'N') FROM emp;`  
    b) `SELECT job, rtrim(job, 'N') FROM emp;`  
    c) `SELECT job, trim(job, 'N') FROM emp;`  
    d) `SELECT job, rtrim(job, 'S') FROM emp;`

15. 급여를 100 단위로 반올림하고, 급여와 보너스를 더한 값을 1000 단위로 절삭하는 SQL 문은 무엇입니까?
    a) `SELECT ename, round(sal, -2), trunc(sal + nvl(comm, 0), -3) FROM emp;`  
    b) `SELECT ename, round(sal, 2), trunc(sal + nvl(comm, 0), 3) FROM emp;`  
    c) `SELECT ename, round(sal, 2), trunc(sal + comm, -3) FROM emp;`  
    d) `SELECT ename, round(sal, -2), trunc(sal + comm, 3) FROM emp;`



## 문제 + 정답 ##

### 중첩 함수 문제
1. `ename` 컬럼의 값을 소문자로 변환한 후 길이를 반환하는 SQL 문은 무엇입니까?
    - a) `SELECT length(ename) FROM emp;`
    - b) `SELECT length(lower(ename)) FROM emp;`  **(정답)**
    - c) `SELECT lower(length(ename)) FROM emp;`
    - d) `SELECT ename, length(lower(ename)) FROM emp;`

2. `ename` 컬럼에서 첫 세 글자를 추출한 후 이를 소문자로 변환하는 SQL 문은 무엇입니까?
    - a) `SELECT ename, substr(lower(ename), 1, 3) FROM emp;`
    - b) `SELECT ename, lower(substr(ename, 1, 3)) FROM emp;`  **(정답)**
    - c) `SELECT lower(substr(ename, 1, 3)) FROM dual;`
    - d) `SELECT substr(lower(ename), 1, 3) FROM emp;`

### `instr` 함수 문제
3. `KING` 문자열에서 `I` 문자의 위치를 찾는 SQL 문은 무엇입니까?
    - a) `SELECT instr('KING', 'I') FROM dual;`  **(정답)**
    - b) `SELECT instr('KING', 'K') FROM dual;`
    - c) `SELECT instr('KING', 'G') FROM dual;`
    - d) `SELECT instr('KING', 'N') FROM dual;`

4. `ename` 컬럼에서 `A` 문자의 위치를 찾는 SQL 문은 무엇입니까?
    - a) `SELECT ename, instr(ename, 'A') FROM emp;`  **(정답)**
    - b) `SELECT ename, instr(ename, 'a') FROM emp;`
    - c) `SELECT ename, instr(ename, 'A') FROM dual;`
    - d) `SELECT instr(ename, 'A') FROM emp;`

### `lpad`, `rpad` 함수 문제
5. `sql` 문자열을 길이 5로 만들고 왼쪽에 `*`로 채우는 SQL 문은 무엇입니까?
    - a) `SELECT lpad('sql', 5, '*') FROM emp;`
    - b) `SELECT lpad('sql', 5, '*') FROM dual;`  **(정답)**
    - c) `SELECT rpad('sql', 5, '*') FROM dual;`
    - d) `SELECT lpad('sql', 3, '*') FROM dual;`

6. `ename` 컬럼의 값을 최대 길이 6으로 만들고, 나머지는 `*`로 채우는 SQL 문은 무엇입니까?
    - a) `SELECT ename, lpad(ename, 6, '*') FROM emp;`
    - b) `SELECT ename, rpad(ename, 6, '*') FROM emp;`  **(정답)**
    - c) `SELECT ename, rpad(ename, 6, '*') FROM dual;`
    - d) `SELECT ename, lpad(ename, 6, '*') FROM dual;`

### `ltrim`, `rtrim`, `trim` 함수 문제
7. 문자열 `*****sql****`의 왼쪽에 있는 `*`를 제거하는 SQL 문은 무엇입니까?
    - a) `SELECT ltrim('*****sql****', '*') FROM dual;`  **(정답)**
    - b) `SELECT rtrim('*****sql****', '*') FROM dual;`
    - c) `SELECT trim('*****sql****', '*') FROM dual;`
    - d) `SELECT ltrim('sql****', '*') FROM dual;`

8. `job` 컬럼의 값을 기준으로 왼쪽에 있는 `S`를 제거하는 SQL 문은 무엇입니까?
    - a) `SELECT job, rtrim(job, 'S') FROM emp;`
    - b) `SELECT job, ltrim(job, 'S') FROM emp;`  **(정답)**
    - c) `SELECT job, trim(job, 'S') FROM emp;`
    - d) `SELECT job, ltrim(job, 'N') FROM emp;`

### 숫자형 함수 문제
9. 숫자 `23427.277`을 소수점 세 번째 자리에서 반올림하는 SQL 문은 무엇입니까?
    - a) `SELECT round(23427.277, 1) FROM dual;`
    - b) `SELECT round(23427.277, 3) FROM dual;`  **(정답)**
    - c) `SELECT trunc(23427.277, 3) FROM dual;`
    - d) `SELECT ceil(23427.277) FROM dual;`

10. 숫자 `23427.277`을 소수점 첫 번째 자리에서 내림 처리하는 SQL 문은 무엇입니까?
    - a) `SELECT trunc(23427.277, 1) FROM dual;`  **(정답)**
    - b) `SELECT floor(23427.277) FROM dual;`
    - c) `SELECT trunc(23427.277, -1) FROM dual;`
    - d) `SELECT ceil(23427.277) FROM dual;`

### 추가 문제
11. `ename` 컬럼의 값을 소문자로 변환한 후, 그 길이를 출력하는 SQL 문은 무엇입니까?
    - a) `SELECT ename, length(lower(ename)) FROM emp;`  **(정답)**
    - b) `SELECT ename, lower(length(ename)) FROM emp;`
    - c) `SELECT ename, lower(ename) FROM emp;`
    - d) `SELECT lower(length(ename)) FROM emp;`

12. `job` 컬럼에서 `MAN`이 포함된 데이터를 검색하고 그 위치를 출력하는 SQL 문은 무엇입니까?
    - a) `SELECT ename, job, instr(job, 'MAN') FROM emp WHERE instr(job, 'MAN') > 0;`  **(정답)**
    - b) `SELECT ename, job, instr(job, 'MAN') FROM emp WHERE instr(job, 'MAN') = 0;`
    - c) `SELECT ename, job, instr(job, 'MAN') FROM emp WHERE instr(job, 'MAN') < 0;`
    - d) `SELECT ename, job, instr(job, 'MAN') FROM emp;`

13. `ENAME` 컬럼의 값을 오른쪽에 `*`로 채워 길이 8로 만드는 SQL 문은 무엇입니까?
    - a) `SELECT ename, rpad(ename, 8, '*') FROM emp;`  **(정답)**
    - b) `SELECT ename, lpad(ename, 8, '*') FROM emp;`
    - c) `SELECT ename, rpad(ename, 8, '#') FROM emp;`
    - d) `SELECT ename, rpad(ename, 6, '*') FROM emp;`

14. `job` 컬럼의 값을 기준으로 오른쪽에 있는 `N`을 제거하는 SQL 문은 무엇입니까?
    - a) `SELECT job, ltrim(job, 'N') FROM emp;`
    - b) `SELECT job, rtrim(job, 'N') FROM emp;`  **(정답)**
    - c) `SELECT job, trim(job, 'N') FROM emp;`
    - d) `SELECT job, rtrim(job, 'S') FROM emp;`

15. 급여를 100 단위로 반올림하고, 급여와 보너스를 더한 값을 1000 단위로 절삭하는 SQL 문은 무엇입니까?
    - a) `SELECT ename, round(sal, -2), trunc(sal + nvl(comm, 0), -3) FROM emp;`  **(정답)**
    - b) `SELECT ename, round(sal, 2), trunc(sal + nvl(comm, 0), 3) FROM emp;`
    - c) `SELECT ename, round(sal, 2), trunc(sal + comm, -3) FROM emp;`
    - d) `SELECT ename, round(sal, -2), trunc(sal + comm, 3) FROM emp;`




