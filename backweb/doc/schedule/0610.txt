# Oracle 프로시저 및 제약사항

## 1. 흥미로운 도입
Oracle 프로시저는 데이터베이스 관리와 처리에 있어 매우 강력한 도구입니다. 프로시저는 일련의 SQL 문장을 하나의 단위로 실행할 수 있게 해주며,
 복잡한 데이터 조작과 비즈니스 로직을 데이터베이스 내에서 수행할 수 있게 합니다. 예를 들어, 대규모 온라인 쇼핑몰에서는 수백만 건의 주문 
 데이터를 실시간으로 처리하고 분석해야 합니다. 이런 상황에서 Oracle 프로시저를 사용하면 성능 향상과 코드 재사용성을 높일 수 있습니다. 

## 2. 학습목표
- Oracle 프로시저의 개념과 구조를 이해한다.
- 프로시저 작성 및 실행 방법을 학습한다.
- 프로시저 사용 시 주의해야 할 제약사항을 파악한다.
- 실무에서 Oracle 프로시저를 활용하는 방법을 익힌다.

## 3. 주요 핵심 키워드와 핵심개념
- **프로시저(Procedure)**: 사전에 정의된 일련의 SQL 문장들을 하나의 단위로 실행하기 위한 데이터베이스 객체.
- **제약사항(Constraints)**: 데이터베이스 무결성을 유지하기 위해 적용하는 조건들로, 프로시저 작성 시에도 다양한 제약사항이 적용될 수 있음.
- **PL/SQL**: Oracle에서 제공하는 절차형 언어로, 프로시저, 함수, 트리거 등을 작성할 때 사용됨.
- **트랜잭션(Transaction)**: 데이터베이스 상태를 변경하는 일련의 연산들을 하나의 논리적 단위로 묶은 것.
- **에러 핸들링(Error Handling)**: 프로시저 실행 중 발생할 수 있는 예외 상황을 처리하는 방법.

## 4. 퀴즈문제/토론과제

### 퀴즈문제
1. Oracle 프로시저에서 IN, OUT, IN OUT 매개변수의 차이는 무엇인가요?
2. 프로시저와 함수의 차이점을 설명하세요.
3. Oracle 프로시저에서 사용되는 EXCEPTION 블록의 역할은 무엇인가요?

### 토론과제
- Oracle 프로시저를 사용할 때와 단순 SQL 문을 사용할 때의 장단점에 대해 토론해봅시다.
- 제약사항을 설정할 때, 데이터 무결성을 유지하면서 성능을 최적화할 수 있는 방법에 대해 논의해봅시다.

## 5. 실무적용사례
### 사례 1: 대형 금융기관의 거래 처리 시스템
한 대형 금융기관에서는 하루에 수백만 건의 거래를 처리해야 합니다. 이때 각 거래는 여러 단계의 검증 과정을 거치게 되며, 
이 과정에서 Oracle 프로시저를 사용하여 일련의 검증 및 승인 작업을 효율적으로 처리합니다. 이를 통해 실시간으로 거래 내역을 확인하고, 
부정 거래를 신속히 감지할 수 있습니다.

### 사례 2: 온라인 쇼핑몰의 주문 처리 시스템
대형 온라인 쇼핑몰에서는 고객의 주문이 들어오면 즉시 재고 확인, 결제 처리, 배송 준비 등의 작업을 수행해야 합니다. 
Oracle 프로시저를 사용하여 이러한 작업을 자동화함으로써 주문 처리를 신속하고 정확하게 할 수 있습니다. 예를 들어, 주문이 들어올 때마다 
실행되는 프로시저는 재고를 확인하고, 결제가 완료되면 배송 시스템과 연동하여 배송을 준비합니다.
