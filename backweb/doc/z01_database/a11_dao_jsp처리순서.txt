# dao를 통한 jsp화면 처리
1. 요구사항 정의
	ex) 아이디와 패스워드를 입력해서 DB에 등록된 회원을 검색해서 있으면 로그인 성공 메인페이지 이동 처리
		없으면 로그인 실패 다시 로그인 하세요 메시지 처리.
2. 화면설계
	    로그인
	id : [    ]
	pwd : [     ]
	[로그인]
3. 데이터베이스 처리
	1) db만들기(테이블 생성)
		member(id, pwd, name, author, point)
	2) 사용할 sql 정리
		select *
		from member
		where id = ? and pwd = ?
	3) 위 sql에서 입력값/출력값 구분
		입력 : id, pwd
		출력 : id, pwd, name, author, point 단일 객체로 할당.
	4) VO 입력값/출력값기반하여 생성
		class Member{
			private String id;
			....
		}
		------------------------------------
	5) dao 작성
		public Member login(String id, String pwd){
			Member mem =null;
			String sql = "	select *
							from member
							where id = ? and pwd = ?";
			return mem;
		}
		자바메인확인:Member mem = dao.login("himan","7777") // 데이터가 있을 때, Member객체 생성, 없으면 null
		jsp에서 처리:<c:set var="mem" value="${dao.login(param.id,param.pwd)}"/>
		public Member login(Member login){
			Member mem =null;
			String sql = "	select *
							from member
							where id = ? and pwd = ?";
			return mem;
		}
		자바메인확인:Member mem = dao.login(new Member("himan","7777"));
		jsp에서 처리:
		<jsp:useBean id="loginMem" class="......Member"/>
		<jsp:setProperty name="loginMember" property="*"/> 	
		<c:set var="mem" value="${dao.login(loginMem}"/>
			
		template 기반
		한개/다중 row 구분 if, while
		select 인지 insert/update/delete
6. 화면 처리
	1) 위 화면설계 바탕으로(jsp 화면 구현)
		- 입력하는 form 화면구현/요청값처리 name="요청키"
			<input name="XXX" value="">
			<form>
				id:<input name="id"/>
				pwd:<input name="pwd"/>
				<input type="submit" value="로그인"/>
		
		- 출력할 데이터 어떻게 구현할지 테이블 형식
			리스트 테이블
			단일 데이터 입력 형식 테이블..
	2) usebean 사용
		- dao 객체 선언
			<jsp:useBean id="dao" class="XXXXX.MemberDao">
		- 요청값으로 usebean사용할지 여부 결정
			<jsp:useBean id="loginMem" class="......Member"/>
			<jsp:setProperty name="loginMem" property="*"/> 
		
	3) 결과 처리
		- 반복문 활용 : <c:forEach var="단일" items="${dao.메서드(요청값)}"
		- 단일 구문에 데이터 입력 처리	
			<c:set var="단일" value="${dao.메서드(요청값)}"
			ex)
			<c:set var="mem" value="${dao.login(loginMem)}" scope="session" />	
		- 등록/수정/삭제일 때, 결과값 int 값 설정
			<c:set var="crudCnt" value="${dao.메서드(요청값)}"
			<c:set var="crudCnt" value="${dao.insertXXXX(요청값)}"
		- javascript 삽입여부
			등록/수정/삭제시, alert(), confirm()
			java ==> javascript
				var crudCnt = ${crudCnt}
				if(crudCnt>0){
					if(confirm("등록성공\n메인페이지로 이동하겠습니까?")){
						location.href="지정한메인페이지");
					}
				}
				var loginCk = "${mem.name}" 
				if(loginCk!=""){
					alert("로그인 성공\n메인페이지 이동")
					location.href="메인페이지"
				}else{
					alert("로그인 실패\n로그인 다시하세요")
					location.href="로그인페이지"
				}
				
				
	4) 기타 이벤트
		버튼 페이지 이동  <button onclick="location.href='이동 페이지'">
		더블 클릭시 요청값과 함께 전송 <tr ondblclick="goPage(${데이터})">
			function goPage(요쳥값변수){
				location.href="페이지?요청값="+요청값변수;
			}			