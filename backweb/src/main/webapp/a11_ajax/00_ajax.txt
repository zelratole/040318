# ajax 단계별 학습
1. 기본 javascript XMLHttpRequest 객체로 처리
2. jquery ajax 기본 속성값에 대한 이해
	1) 기본 속성값 정리
		url: 지정한 페이지
	2) 데이터 가져오기..(text)	
		success:function(data){
		
		}
	3) 데이터 전송하기
		data:"key1=val1&key2=val2&..."
	4) 데이터 가져오기 (화면전체)
		database 연동된 화면 가져오기.
	5) 요청값 + 데이터 가져오기(화면전체)
-------------------------------------------
	6) 요청값 + json 데이터 가져오기
	
	7) 요청값 + json 데이터를 가지고 출력하기..
	
# json 데이터 처리
1. ajax에서 데이터를 처리할 때, 해당 데이터가 key:value 형식으로 처리하여
웹에서 네트웍을 통해서 보다 효과적으로 전달한다.
2. 화면전체를 html로 전달하는 것을 부하 등 문제로 인하여 간단한 형식으로 전달하여
javascript로 데이터를 해당 화면에 맞게 변환하여 처리하는 것이 일반적이다.
3. json 데이터 형식
	1) javascript에서 객체로 사용
		var ob = {속성:"문자열속성값",속성:숫자....}
		ex) var p01 = {name:'홍길동', 'age':25, "loc":"서울"}
		속성 : 바로 속성명, "속성명",'속성명' 형식 둘다 js에서는 허용한다.
		속성값 : 문자열인 경우 "사과"/'속성값' 형식, 숫자인 경우  25, 
			boolean형식 인경우 true/false 등의 형식으로 선언하여 사용 가능하다.
	2) 서버 ==> 클라이언트 전달시
		{"속성":"문자열", "속성":숫자}
		ex) {"name":"홍길동","age":25,"loc":"서울"}
		서버에서 클라이언트로 전달시에는 위와 같은 형식을 반드시 지켜야 데이터 전달이 가능하다.
		일반적으로 문자열로 위 형식으로 전달하여 JSON.parse() 메서드로 객체로 변환하여 사용한다.
		jquery에서 $.ajax()로는 dataType:"json" 으로 속성을 선언하면 자동 형변환하여 
		가져오기도 한다.
		var jsonStr = '{"name":"홍길동","age":25,"loc":"서울"}'; // 문자열로된 json형식
		jsonStr.name (X) 문자열 자체로는 사용 불가
		var jsonOb = JSON.parse(jsonStr); // 객체로 처리 됨.
		jsonOb.name (O) 객체로 사용 가능
		
		속성 : "속성명" 형식만 허용
		속성값 : 문자열인 경우 "사과" 형식으로 숫자형인 경우 25, boolean 인 경우 true/false
			등으로 처리..		
			
			
			
			









			
	
		