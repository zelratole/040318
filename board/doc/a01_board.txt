# 답변형 게시판 주요 기능
1. 기본 메인 조회 리스트
2. 게시글 등록
	1) 제목/작성자/내용/첨부파일(파일업로드)로 글등록 처리
3. 게시글 상세
	1) 제목, 작성자, 내용, 첨부파일(다운로드), 읽은 횟수
	2) 답글달기/수정/삭제
4. 답글달기
	상세글에서 답글을 달면 해당 글 하위에 메인 조회 리스트에서 출력
	된다.
5. 계층형 메인 조회 리스트
	1) 답글은 바로 아래 처리된 계층형으로 전체 리스트를 출력한다.
	2) 최근글이나 최근 답글은 최상위에 리스트하여 역순위로 정렬
	3) 하단에 페이징 리스트를 하여, 많은 글이라도 부하를 감소시켜서
		페이징 블럭마다 각각의 글리스트를 확인 할 수 있다.

# 상세화면 처리..
1. 리스트에서 특정 행단위를 클릭시, 상세화면으로 이동 처리
	boardDetail.do?no=@@@
2. 상세 내용이 조회된 화면 로딩
	번호			상위번호
	제목
	작성자        조회수
	등록일        수정일
	내용
	
	첨부파일
# 처리 순서
1. DB 처리
	1) sql작성
		select * from board where no = #{no}
		select fname from boardfile where no = #{no}
		update board
			set readcnt = readcnt + 1
		where no = #{no}
		
	2) dao 작성
		Board getBoard(@Param("no") int no);
		List<String> getBoardFile(@Param("no") int no);
		int uptReadCnt(@Param("no") int no);

	3) service
	4) controller
		boardDetail.do  no요청값 처리..
	------------------------------------
		
	5) jsp(view)
		boardList.jsp
			행단위 페이지 이동
			function goDetail(no){
				location.href=""
			}
		boardDetail.jsp	
			<input type="number" name="no" value="${board.no}" readonly/>
			번호			상위번호
			제목
			작성자        조회수
			등록일        수정일
			내용
			
			첨부파일			

# 게시물 수정 삭제 처리.
1. sql  작성
	1)  수정
	2)  삭제
------------------------
2. dao 처리

UPDATE BOARD 
	SET subject = #{subject},
	    content = #{content},
	    uptdte = sysdate
WHERE NO = #{no}

DELETE FROM board
WHERE NO = #{no}
	int updateBoard(Board upt);
	int deleteBoard(@Param("no") int no);
	
-------------------------------------	
3. service/controller 호출 처리
4. controller
	1) updateBoard.do
	2) deleteBoard.do
5. jsp
	1) 수정버튼 클릭시,
		$("form").attr("action","updateBoard.do")
	2) 삭제버튼 클릭시
		location.href="deleteBoard.do?no="+no

# 답글 처리..
1. 게시판에서 답글을 달아서, 해당 글에 대한 답변글을 바로 밑에 하단에 계층적으로
	붙이는 처리를 하는 것을 말한다.
2. 처리프로세스
	1) 상세화면에서 답글버튼 클릭시, 답글 등록 화면이 로딩.
	2) 답글내용 입력시
	3) 게시물 전체 화면에서 해당 글 밑에 붙는 것을 말한다.
	# 데이터베이스 
	no 1번글의 답글을 처리하면  새로운  no에 refno가 1로 등록되어
	처리된다. 이를 통해서 상/하위 계층 구조의 데이터를 처리되어
	계층형 sql 처리가 가능하다.
3. 개발 순서
	1) 상세글 화면에서 답글 클릭시
		요청값 전달 :
			제목 ==> RE:제목
			no ==> refno에 할당처리..
			내용 ==>  === 이전 글 ===
					 기존 글내용....
		위와 같이 해당 값으로 요청값을 전달하여 기본 화면 form에 출력되게 처리한다.
	2) 답글(기본 등록 화면에서 위와 같이 답글 관련 데이터를 전송한 상태에서 글등록 처리)
		글등록
			<input name="refno" value="${board.refno}"/> 
								
	
# 계층적 sql에 의한 답글리스트 처리
1. 오라클에서는 글과 상위글이라는 계층적 데이터로 계층적 sql을 처리할 수 있다.
2. 이 계층적 sql을 통해, 답변형 게시판의 경우, 해당 답글이 바로 밑에 처리되는 형식으로
	게시판의 리스트를 구현할 수 있다.
3. 계층적 sql의 원리와 구조
	1) 계층적 sql 처리를 위한 데이터 저장
		- 기본 데이터를 입력하면,
		- 이 기본 데이터를 기반으로 하는 상위/하위 컬럼이 존재하여야 한다.
		- 그래서, 두 컬럼간의 상/하위 관계에 의해 데이터가 저장되어 있을 때 가능하다.
		ex) emp 테이블의 경우 empno, mgr이 사원번호와 관리자번호가 계층적으로 데이터가
		저장되어 있다. 이렇게 상/하위 관계의 컬럼이 있을 때만 가능하다.
	2) 게시판에서 계층적 컬럼 구조
		- no 기본 글번호, refno 이글의 상위 글번호..
		- no/refno는 답글을 처리할 때, refno데이터가 저장이 된다.
	3) 계증적 sql의 주요 속성
		start with 컬럼명 = 조건데이터   : 최상위 계층의 데이터 조건을 선언한다.
		connect by prior 하위컬럼 = 상위컬럼  : 계층적으로 연결된 컬럼을 지정한다.
		order siblings by 컴럼명 desc : 기본적으로 같은 계층에 대하여 asc(오름차순이나), 내림 차순으로
										처리할 필요할 때, 옵션을 설정한다.
										ps) siblings : 형제....
	4) 게시판 sql 처리  == rownum 행단위 고유 numbering 처리, level 계층레벨..
		select rownum cnt, level, b.*   
		from board b
		where subject like '%%'
		and writer like '%%'
		start with refno = 0
		connect by prior no = refno
		order siblings by no desc
		
		;
		==> vo(board) cnt, level													
	7) 화면단
		제목은 기본적으로 왼쪽 정렬 처리, 계층레벨(level)을 가져와서, 레벨에 따라서 공백 처리..


# 하단에 paging 처리 로직..
	
	
	
	        
		





		