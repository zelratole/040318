# fullcalendar jquery lib Ajax 연동 처리
1. 학습 내용 계열화
	1) spring에서 jquery ajax 처리
		- 기본 MVC 패턴으로 처리
		- DB연동하여 ajax 처리
	2) fullcalendar lib 주요 속성값 확인
	
	3) fullcalendar json 데이터 처리를 위한 DB설계 및 Dao 처리
	
	4) 기능별 처리
		조회 리스트
		일정 등록
		일정 수정
		일정 삭제..
# jquery lib 형태의 내용 spring 환경에서 처리하기.
1. 기본 모듈 다운 로드
2. css 설정/js 설정 부분 확인 ==> 공통폴드(webapp/a00_comm/)에 복사 설정
3. jsp(new단 만들기) 
	controller ==> view 호출..
	위 css/js 부분 설정 처리
	기본 화면 구성(javascript, css, html단 설정 완료)
	추가 화면 구성 필요 내용 확인 처리(모달창 등..)
			
		
		
		
# spring에서 jquery ajax 처리
1. 요청값과 모델 데이터 처리 연습
	- controller단 구현
 	- 화면단 구현
 2. dao 처리를 통한 ajax 연동 처리
 3. 사원정보 ajax spring으로 처리해보기..
 
# fullcalendar json 데이터 처리를 위한 DB설계 및 Dao 처리
1. fullcalendar api, json 데이터 참고하여 테이블 만들기
				title : 'Long Event',
				start : '2024-07-07',
				end : '2024-07-10'
	주요 속성(고유속성)
	id : 일정에 대한 고유 식별자
	title : 일정 타이틀
	start : 시작일
	end : 종료일
	backgroundColor : 배경색상
	textColor : 글자색상
	allDay : 종일여부
	--------------
	추가속성
	writer : 작성자
	content : 내용
	테이블
	create table calendar(
		id number primary key,
		title varchar2(200),
		writer varchar2(50),
		start1 varchar2(50),
		end1 varchar2(50),
		content varchar2(1000),
		backgroundColor varchar2(50),
		textColor varchar2(50),
		allDay number(1),
		url varchar2(200)
	)	

	CREATE SEQUENCE cal_seq;
	INSERT INTO calendar values(cal_seq.nextval,
		'첫일정','홍길동','2024-07-08','2024-07-09',
		'첫일정입니다.','#0099cc','#ccffff',1,
		'http://www.naver.com');	
		select * 
	from calendar;	
	VO 
	class Calendar
	private int id;
	private String title;
	private String writer;
	private String start;
	private String end;
	private String content;
	private String backgroundColor;
	private String textColor;
	private boolean allDay;
	private String url;
	
	select id, title, writer, start1 "start", end1 "end", content, backgroundcolor,
			textcolor, allday, url
	from calendar
	INSERT INTO calendar values(cal_seq.nextval,
		#{title},#{writer},#{start},#{end},
		#{content},#{backgroundColor},#{textColor}#{allDay},#{url})		
	기준을 dao/service/controller	
	
	http://localhost:7080/springweb/callList.do
	위 json 데이터 호출 출력..
		
	
# 일정 등록
1. 기본 요구사항
	일정을 클릭하거나, 시간을 스크롤시, 등록 모달창이 로딩되어,
	기본적인 인터페이스(시작/종료/종일여부는 api에서 자동입력받고)
	나머지 사항에 대한 등록을 하고, 하단에 등록하면, 모달창이 닫히고
	전체 리스트 화면에 반영된 것을 확인 할 수 있다.
2. 개발 순서
	1) 등록 dao 작성
		sql/vo/dao 작성
	2) service/controller 호출..
		insertCalendar.do
	3) 화면단 처리..
		일정을 클릭하거나, 시간을 스크롤하는 기능메서드(select)에서
		처리한다.
		- 모달창에 등록할 내용 form요소객체로 작성..
		- select메서드 호출시 모달창 로딩하게 한다.
	4) 등록버튼 클릭시, ajax로 controller단에 요청값 전송.
		- 모달창 하단에 등록버튼 클릭시, form 요청값을
			컨트롤러에 호출하는 ajax 처리
		- 등록 성공 후, 다시 전체 화면 refresh 처리..
				
	
# 날짜 처리..

실제 DB에 저장하고, 요청값으로 전달할 형식(ISO형식-날짜.toISOString()) 
	:2024-07-03T15:00:00+09:00 : GMT
화면에 보일 형식(날짜.toLocaleString()) :  2024. 7. 11. 오전 12:00:00 	
	
# boolean 처리 저장.
1. javascript/java에서 boolean 형식 즉 true/false값이 있다.
2. 그러나, database에서 boolean 타입자체가 없다. 
3. 그런데, DB에서 char(1)/varchar2(1)로 설정하여 1/0을 입력하면 자동 형변환이 되어 boolean 속성값으로 true/false값을
	가져올 수 있다.
4. json형식에서는 이런 vo의 속성을 자동으로 로딩하여 boolean형식으로 처리해준다..


# 상세화면 로딩처리
1. 특정한 일정을 클릭시, 모달창으로 상세 데이터를 로딩하는 것을 말한다.
2. 기본적으로 모든 속성을 lib내부에서 database에 있는 데이터를 할당한 상태이기에
3. 상세화면의 데이터를 위한 ajax처리는 필요하지 않는다.
4. 다만, 상세 화면을 클릭시, 매개변수로 가져오는 캘린더 정보를 모달 안에 있는 
   form에 할당 하는 작업을 하여야 한다.
5. 개발 순서
	1) 상세 화면을 위한 모달 화면 구성 추가
		수정/삭제 버튼
	2) 일정 내용 클릭시 처리되는 이벤트확인 및 이벤트처리(eventClick)
	
		타이틀 변경
		등록과 수정 삭제 버튼에 대한 show()/hide()처리 - 등록 버튼 시에도 구분 처리..
		매개변수로 받아오는 속성값(fullcalendar자체 DB에서 할당된 데이터)을 통해서 모달 form데이터할당처리
		모달창 로딩처리(모달창 로딩 이벤트 처리)

# 수정/삭제 처리
1. 요구사항 내용
	1) 상세화면에서 데이터를 변경 후, 수정 삭제 처리시, 해당 내용을 수정/삭제 처리된다.
	2) 일정의 경우, 일정을 늘리거나, 클릭 후 드래그하여 다른 일정으로 드랍시 일정 변경된다.
2. 처리 순서
	1) sql 작성(수정/삭제)
UPDATE CALENDAR 
SET title = #{title},
    start1=#{start},
    end1=#{end},
    writer=#{writer},
    content=#{content},
    backgroundColor=#{backgroundColor},
    textColor=#{textColor},
    allDay = #{allDay},
    url=#{urlLink}
WHERE id = #{id}
DELETE FROM calendar
WHERE id = #{id}
	2) dao 처리
	3) service
	4) controller 호출..
		updateCalendar.do
		deleteCalendar.do
	----------------------------------	
	4) 화면단 처리..
		- 상세화면에서 변경후 수정버튼클릭시 수정 ajax 호출
		- 상세화면에서 변경후 삭제버튼클릭시 삭제 ajax 호출	
		- 일정 늘이기/일정 드래그앤드랍시 수정 ajax 호출..
		
	
		 
		 
		 
		 
		 
		 
		 
		  