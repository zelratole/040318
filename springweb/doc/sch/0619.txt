### Oracle 제약사항

#### 1. 흥미로운 도입
Oracle 데이터베이스는 수많은 기업과 기관에서 핵심 데이터 관리 시스템으로 사용됩니다. 
데이터 무결성과 성능을 유지하기 위해 중요한 요소 중 하나가 바로 제약사항입니다. 
제약사항은 데이터베이스의 데이터 무결성을 보장하고, 비즈니스 로직을 데이터베이스 레벨에서 구현하는 데 중요한 역할을 합니다. 
이번 강의에서는 Oracle의 제약사항이 왜 중요한지, 그리고 이를 어떻게 효율적으로 사용할 수 있는지 알아보겠습니다.

#### 2. 학습목표
- Oracle 제약사항의 중요성과 필요성 이해
- Oracle 제약사항의 종류와 각각의 기능 파악
- 제약사항을 이용한 데이터 무결성 유지 방법 학습
- 제약사항을 정의하고 관리하는 방법 실습
- 실무 적용 사례를 통해 제약사항의 실제 활용 방법 이해

#### 3. 주요 핵심 키워드와 핵심개념
- **제약사항(Constraint)**: 데이터베이스의 무결성을 보장하기 위해 사용되는 규칙
- **PRIMARY KEY**: 테이블 내에서 각 행을 고유하게 식별하는 데 사용되는 제약사항
- **FOREIGN KEY**: 한 테이블의 필드가 다른 테이블의 PRIMARY KEY를 참조하는 제약사항 ex) 등록된 부서번호만 사원정보에 들어 갈 수 있게.
- **UNIQUE**: 컬럼의 값이 고유하도록 강제하는 제약사항 ex) null 여러개 들어가는 것이 가능..
- **NOT NULL**: 컬럼에 NULL 값을 허용하지 않는 제약사항
- **CHECK**: 컬럼의 값이 특정 조건을 만족하도록 강제하는 제약사항 ex) 학년데이터 1~3 입력 가능.. 남/녀

#### 4. 퀴즈문제/토론과제
**퀴즈문제:**
1. PRIMARY KEY 제약사항의 주요 기능은 무엇인가요?
2. FOREIGN KEY 제약사항은 어떤 상황에서 사용되며, 그 역할은 무엇인가요?
3. UNIQUE 제약사항과 PRIMARY KEY 제약사항의 차이점을 설명하세요.
4. CHECK 제약사항을 사용하여 데이터 유효성을 보장하는 예를 들어보세요.

**토론과제:**
- 제약사항을 잘못 설정하면 데이터베이스 성능에 어떤 영향을 미칠 수 있을까요?
- 실무에서 제약사항을 설정할 때 고려해야 할 사항들은 무엇이 있을까요?
- 제약사항을 사용함으로써 얻을 수 있는 이점과 단점에 대해 토론해 봅시다.

#### 5. 실무적용사례
**사례 1: 고객 관리 시스템**
고객 관리 시스템에서 각 고객의 ID는 고유해야 하며, 이는 PRIMARY KEY 제약사항으로 설정할 수 있습니다. 고객 이메일 주소 역시 UNIQUE 제약사항을 통해 중복되지 않도록 관리합니다.

**사례 2: 재고 관리 시스템**
제품 테이블에서 각 제품의 ID는 PRIMARY KEY로 설정되고, 각 제품의 재고 수량은 음수가 될 수 없도록 CHECK 제약사항을 설정할 수 있습니다. 예를 들어, `CHECK (quantity >= 0)`라는 제약사항을 추가하여 이를 보장합니다.

**사례 3: 인사 관리 시스템**
직원 테이블에서 각 직원의 부서 ID는 부서 테이블의 PRIMARY KEY를 참조하도록 FOREIGN KEY 제약사항을 설정합니다. 이를 통해 부서 ID의 무결성을 유지하고, 잘못된 부서 ID가 입력되는 것을 방지합니다.

