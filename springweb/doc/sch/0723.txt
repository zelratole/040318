### Vue Directive 선언

#### 1. 흥미로운 도입
Vue.js는 사용자 인터페이스를 구축하기 위한 프로그레시브 프레임워크로서, 그 강력한 기능 중 하나는 바로 디렉티브입니다. 디렉티브는 Vue의 HTML 템플릿에 특별한 동작을 추가하는 방법으로, 데이터 바인딩과 DOM 조작을 손쉽게 처리할 수 있게 해줍니다. 예를 들어, `v-if`나 `v-for`와 같은 내장 디렉티브를 통해 조건부 렌더링이나 리스트 렌더링을 간단하게 구현할 수 있습니다. 그렇다면, 이러한 디렉티브를 어떻게 선언하고 활용할 수 있는지 알아보겠습니다.

#### 2. 학습목표
- Vue.js에서 디렉티브의 역할과 필요성을 이해한다.
- 사용자 정의 디렉티브를 선언하고 사용하는 방법을 학습한다.
- 디렉티브의 주요 사용 사례와 실무 적용 방법을 익힌다.

#### 3. 주요 핵심 키워드와 핵심 개념
- **디렉티브(Directive)**: Vue 템플릿에 특별한 동작을 부여하는 지시자.
- **내장 디렉티브**: Vue에서 기본 제공하는 디렉티브 (`v-if`, `v-for`, `v-bind`, `v-model` 등).
- **사용자 정의 디렉티브**: 개발자가 필요에 따라 직접 정의하여 사용하는 디렉티브.
- **바인딩**: 디렉티브가 적용될 DOM 요소와 데이터 간의 연결.
- **훅(Hook)**: 디렉티브의 라이프사이클 단계에서 호출되는 함수 (`bind`, `inserted`, `update`, `componentUpdated`, `unbind`).

#### 4. 퀴즈문제/토론과제
- **퀴즈 문제**:
  1. Vue 디렉티브의 주요 기능 중 하나는 무엇인가요?
     - a) 데이터 저장
     - b) 사용자 인터페이스 디자인
     - c) HTML 템플릿에 특별한 동작을 추가
     - d) 서버와의 통신
  2. 사용자 정의 디렉티브를 선언할 때 사용되는 메서드 중, 디렉티브가 처음 바인딩될 때 호출되는 메서드는 무엇인가요?
     - a) inserted
     - b) update
     - c) bind
     - d) unbind

- **토론 과제**:
  1. 사용자 정의 디렉티브를 사용해야 하는 상황은 언제일까요? 예시를 들어 설명해 보세요.
  2. 내장 디렉티브만으로 충분히 구현할 수 없는 경우가 있다면, 그 사례를 공유하고 사용자 정의 디렉티브가 어떻게 해결할 수 있는지 논의해 보세요.

#### 5. 실무적용사례
**사례 1: 사용자 정의 디렉티브를 사용한 포커스 관리**
```javascript
// 사용자 정의 디렉티브 'v-focus' 선언
Vue.directive('focus', {
  // 디렉티브가 바인딩된 요소가 DOM에 삽입될 때 호출
  inserted: function (el) {
    el.focus();
  }
});

// 컴포넌트에서 'v-focus' 사용
<template>
  <input v-focus>
</template>
```
이 디렉티브는 특정 입력 필드가 DOM에 삽입될 때 자동으로 포커스를 설정합니다. 사용자가 페이지를 로드하거나 폼을 열 때 특정 필드에 포커스를 맞추는 작업을 간편하게 처리할 수 있습니다.

**사례 2: 조건부 스타일링을 위한 디렉티브**
```javascript
// 사용자 정의 디렉티브 'v-color' 선언
Vue.directive('color', {
  // 디렉티브가 업데이트될 때 호출
  update: function (el, binding) {
    el.style.color = binding.value;
  }
});

// 컴포넌트에서 'v-color' 사용
<template>
  <p v-color="textColor">이 텍스트의 색상이 변경됩니다.</p>
</template>

<script>
export default {
  data() {
    return {
      textColor: 'blue'
    };
  },
  mounted() {
    setTimeout(() => {
      this.textColor = 'red';
    }, 2000);
  }
};
</script>
```
이 디렉티브는 텍스트의 색상을 동적으로 변경합니다. 초기 색상을 'blue'로 설정하고, 2초 후에 'red'로 변경하여 디렉티브가 동적으로 스타일을 적용하는 것을 보여줍니다.

**사례 3: 엘리먼트 드래그 앤 드롭**
```javascript
// 사용자 정의 디렉티브 'v-draggable' 선언
Vue.directive('draggable', {
  bind(el) {
    el.style.position = 'absolute';
    el.onmousedown = function(event) {
      document.onmousemove = function(event) {
        el.style.left = event.pageX + 'px';
        el.style.top = event.pageY + 'px';
      };
      document.onmouseup = function() {
        document.onmousemove = null;
        document.onmouseup = null;
      };
    };
  }
});

// 컴포넌트에서 'v-draggable' 사용
<template>
  <div v-draggable style="width: 100px; height: 100px; background: yellow;">드래그 가능</div>
</template>
```

