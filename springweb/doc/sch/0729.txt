### 수업 시작 시 진행할 내용: Vue Axios 백엔드 연동 처리

#### 1. 흥미로운 도입
- **실제 사례 소개**: Vue와 Axios를 사용하여 백엔드와 연동한 흥미로운 프로젝트를 소개합니다. 예를 들어, 실시간 채팅 애플리케이션이나 간단한 온라인 쇼핑몰 프로젝트 등을 예로 들 수 있습니다.
- **질문 던지기**: "여러분은 웹 애플리케이션이 어떻게 서버와 통신하는지 궁금하지 않으셨나요? 
오늘 우리는 그 비밀을 파헤쳐보겠습니다."

#### 2. 학습목표
- Vue와 Axios를 사용하여 백엔드와의 연동을 이해하고 구현할 수 있다.
- 비동기 통신의 개념과 중요성을 이해하고 실제로 적용할 수 있다.
- 실무 프로젝트에 Vue와 Axios를 활용하여 데이터를 주고받는 방법을 습득한다.

#### 3. 주요 핵심 키워드와 핵심 개념
- **Vue.js**: 프론트엔드 프레임워크로서의 Vue.js의 역할과 특징.
- **Axios**: HTTP 클라이언트 라이브러리로서의 Axios와 그 사용법.
- **비동기 통신**: AJAX와 같은 비동기 통신의 개념과 필요성.
- **REST API**: RESTful API의 개념과 기본 원칙.
- **CORS**: 교차 출처 리소스 공유(CORS)의 개념과 해결 방법.

#### 4. 향상된 암기 기법에 의한 핵심 키워드와 핵심 개념 암기
- **이미지 연상법**: 각 키워드와 개념을 이미지로 연상하여 기억하기. 예를 들어, Axios는 화살표가 서버로 날아가는 이미지로, 비동기 통신은 여러 갈래로 나뉜 시간 축으로 연상합니다.
- **스토리텔링**: 키워드와 개념을 하나의 스토리로 연결하여 기억합니다. 예를 들어, "Vue.js라는 마을에 Axios라는 우체부가 있어 REST API를 통해 데이터를 주고받으며, CORS라는 다리를 건너며 비동기 통신을 한다"와 같은 이야기로 구성합니다.

#### 5. 실무적용사례
- **프로젝트 예제**: 간단한 CRUD 애플리케이션을 만들어 보며, Vue와 Axios를 사용하여 백엔드 서버와 데이터를 주고받는 과정을 실습합니다.
- **코드 리뷰**: 실제 기업에서 사용되는 코드 예제를 분석하고, 왜 그렇게 구현되었는지, 어떤 점이 중요한지 토론합니다.
- **문제 해결**: 실제 프로젝트에서 발생할 수 있는 문제 상황을 설정하고, 이를 해결하는 방법을 찾아봅니다. 예를 들어, CORS 에러 해결 방법, 비동기 통신 시 데이터 처리 방법 등을 다룹니다.



# 공통
1. 각 담당자 일정 - 9대 항목(https://brunch.co.kr/@kbhpmp/194) 내용으로 표현
	1) 홍길동
		간트차트(범위관리) 
2. 추가 정리 사항
	1) 개발환경
		- 하드웨어적 - 네트워크 시스템 구성도
		- 소프트웨어 - 운영체제, 톰캣, 스프링... (버젼포함 정리-이미지와 함께)  
	2) 핵심 기술 정리(개요-그림과 함께, 실제 구현내용-화면 코드 정리)
		- 스프링 MVC
			답변형게시판
		- ajax
			fullcalendar
		- 메일
		- 다국어처리
		- 채팅
		- vue
		- mybatis
		- 파일업로드
	3) 권한 정리
			

# 2조
1. 범위관리 : 간트차트  - 추가 가능
2. 외부 자문 인력 활용?? - 면접시 궁금해 할 듯..
3. 권한 설정 : 대표/임원, 관리자, 인력관리담당자, 팀원
4. 다국어를 session에 따라??
5. [OLD피드백]코드 크기 조금 크게 통일되게 처리
6. 이메일 유효성확인 - 정규식표현방식에 의해 처리 
7. [OLD피드백]상세 화면 설명 : 왼쪽 정렬 위에서 부터. 1.2.3 정리 통일[이전패드백내용]
8. 개발환경 : WEB Container (jsp==> spring MVC) : 개요 다음 정도(목차 상단)
9. 대시보드가 대표/임원이 보는 것과 팀원(PM,팀원) 구분하는 것 권유



# 공통
1. 각 담당자 일정 - 9대 항목(https://brunch.co.kr/@kbhpmp/194) 내용으로 표현
	1) 홍길동
		간트차트(범위관리) 
2. 추가 정리 사항
	1) 개발환경
		- 하드웨어적 - 네트워크 시스템 구성도
		- 소프트웨어 - 운영체제, 톰캣, 스프링... (버젼포함 정리-이미지와 함께)  
	2) 핵심 기술 정리(개요-그림과 함께, 실제 구현내용-화면 코드 정리)
		- 스프링 MVC
			답변형게시판
		- ajax
			fullcalendar
		- 메일
		- 다국어처리
		- 채팅
		- vue
		- mybatis
		- 파일업로드
	3) 권한 정리
# 3조
1. 진행일 7/17 ==> 실제 진행일 7/22? 로 계획/일정진행 준비 : 실제 1주차가 줄었는데 굳이 표현을 하는건 
   내용에 대한 확보
2. PM_bok에 있는 용어 기반하에 구체적인 내용 표현
	ex) 4. 리스크관리(리스크 관리 및 품질 보증)
3. 요구사항정의서 : 대분류를 위 9대 항목으로 변경
	ex) 대분류	소분류
		일정관리	캘린터..
		의사소통  실시간채팅
4. 화면설계는 설계 툴로 만든 것이지, 개발된 화면으로 만드는 것이 아님.
5. 회원정보 목록은 화면설계서에서 비밀번호가 보이는 걸로 보임..(보이지 않게 처리한다고 설명은 하지만. ㅎㅎ)
6. 업무에 각 개별 담당자가 지정이 안되는 걸로 보임(ERD)
7. 회원가입형태로 처리? - 이메일로 처리 : 초기 화면설계화 변경?
8. 회의록에 프로젝트 변경에 대한 부분은 삭제
9. 모든 업무는 기본 화면틀에서 처리될 수 있게 표현 ex) gannt 프로젝트 리스에서 링크되어 해당 form하위에서 처리되게



# 조홍수
1. 테이블 ERD 설계 밝은 화면에 구체적인 내용을 볼 수 있게 처리 
2. 대시보는 차트를 활용할 것을 권유
3. 주말은 일정사항에 빼고, 일단 리스크 관리를 위한 buffer로 설정.
4. 회의록 일정 점검사항은 ppt에 표현

# 1조
0. 아주 능동적으로 업무를 진행함.(칭찬)
1. 일정계획 내용에 구체적인 업무 간단하게 표현 - 팀일정
2. 채팅 서버과 웹서버와 같이 진행하지 않는지? 검토
3. 구현코드부분 2배정도로 크게 해서 표현, 설명부분 적절하게 상단 부분을 통일해서 지정해서 numbering 리스트 되게 처리
4. vue부분 따로 ajax로 가져와서 처리:추후


1. 진행일 7/17 ==> 실제 진행일 7/22? 로 계획/일정진행 준비 : 실제 1주차가 줄었는데 굳이 표현을 하는건 
   내용에 대한 확보
-서영 7/30 
2. PM_bok에 있는 용어 기반하에 구체적인 내용 표현
-서영 7/30
   ex) 4. 리스크관리(리스크 관리 및 품질 보증)
3. 요구사항정의서 : 대분류를 위 9대 항목으로 변경
   ex) 대분류   소분류
      일정관리   캘린터..
      의사소통  실시간채팅
-태형 7/30
4. 화면설계는 설계 툴로 만든 것이지, 개발된 화면으로 만드는 것이 아님.
-준하 7/30
5. 회원정보 목록은 화면설계서에서 비밀번호가 보이는 걸로 보임..(보이지 않게 처리한다고 설명은 하지만. ㅎㅎ)
-서영 7/30
6. 업무에 각 개별 담당자가 지정이 안되는 걸로 보임(ERD)
-태형 7/30
7. 회원가입형태로 처리? - 이메밀로 처리 : 초기 화면설계화 변경? -이해 x
8. 회의록에 프로젝트 변경에 대한 부분은 삭제
-서영 7/30
9. 모든 업무는 기본 화면틀에서 처리될 수 있게 표현 ex) gannt 프로젝트 리스에서 링크되어 해당 form하위에서 처리되게
- 추후 코드사항에 반영예정 팀 전인원  8/~

공통사항
-ppt 추가 예정 팀 전인원, 8/3~4








